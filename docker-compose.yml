services:
  prediction-api:
    build:
      context: .
      dockerfile: ./prediction-api/Dockerfile
    # the Ec2 instance exposes port 80 for http traffic and until there is a
    # frontend, this will be how the app is interacted with
    ports:
      - "80:8080"
    restart: unless-stopped
    networks:
      - predictor_network
  prometheus:
    image: prom/prometheus
    # https://docs.docker.com/engine/storage/volumes/#options-for---mount
    volumes:
      - prometheus-data:/prometheus-data
      # the ":" characters separate the host machine file, the mount point on
      # the container, and the permissions. "ro" is read only
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9090 || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 10s
    networks:
      - predictor_network
  grafana:
    image: grafana/grafana
    volumes:
      - grafana-data:/grafana-data
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - predictor_network

networks:
  predictor_network:
    name: predictor_network
    driver: bridge  # This will be auto-created if it doesnâ€™t exist

volumes:
  prometheus-data:
  grafana-data:
